apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ "{{" }} include "chart.fullname" . {{ "}}" }}
  namespace: {{ "{{" }} .Release.Namespace {{ "}}" }}
  labels:
{{ "{{" }} include "chart.labels" . | indent 4 {{ "}}" }}
spec:
  replicas: {{ "{{" }} .Values.replicaCount {{ "}}" }}
  selector:
    matchLabels:
      app: {{ "{{" }} include "chart.fullname" . {{ "}}" }}
      app.kubernetes.io/name: {{ "{{" }} include "chart.name" . {{ "}}" }}
      app.kubernetes.io/instance: {{ "{{" }} .Release.Name {{ "}}" }}
  template:
    metadata:
      labels:
        app: {{ "{{" }} include "chart.fullname" . {{ "}}" }}
        app.kubernetes.io/name: {{ "{{" }} include "chart.name" . {{ "}}" }}
        app.kubernetes.io/instance: {{ "{{" }} .Release.Name {{ "}}" }}
    spec:
    {{ "{{" }}- with .Values.imagePullSecrets {{ "}}" }}
      imagePullSecrets:
        {{ "{{" }}- toYaml . | nindent 8 {{ "}}" }}
    {{ "{{" }}- end {{ "}}" }}
      serviceAccountName: {{ "{{" }} include "chart.fullname" . {{ "}}" }}
      containers:
        - name: {{ "{{" }} .Chart.Name {{ "}}" }}
          image: "{{ "{{" }} .Values.image.repository {{ "}}" }}:{{ "{{" }} .Values.image.tag {{ "}}" }}"
          imagePullPolicy: {{ "{{" }} .Values.image.pullPolicy {{ "}}" }}
          env:
            - name: POSTGRES_USER
              value: {{ .Values.db.user }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ "{{" }} include "chart.fullname" . {{ "}}" }}-db-key
                  key: password
            - name: POSTGRES_SSLMODE
              value: {{ "{{" }} .Values.db.ssl_mode {{ "}}" }}
            - name: POSTGRES_HOST
              value: "{{ "{{" }} tpl (.Values.db.server) . {{ "}}" }}"
            - name: POSTGRES_PORT
              value: {{ "{{" }} .Values.db.port | quote {{ "}}" }}
            - name: POSTGRES_DB
              value: {{ "{{" }} .Values.db.username {{ "}}" }}
            - name: dsn
              value: postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)?sslmode=$(POSTGRES_SSLMODE)
          ports:
            - name: grpc
              containerPort: {{ "{{" }} .Values.{{ .Name }}.grpcPort {{ "}}" }}
              protocol: {{ "{{" }} .Values.grpcProtocol {{ "}}" }}
            - name: http
              containerPort: {{ "{{" }} .Values.{{ .Name }}.httpPort {{ "}}" }}
              protocol: {{ "{{" }} .Values.httpProtocol {{ "}}" }}
            - name: health
              containerPort: {{ "{{" }} .Values.healthPort {{ "}}" }}
          args: [
            "--database.dsn=$(dsn)",
            "--default.limit",
            "{{ .Values.args.limit }}"
          ]
          livenessProbe:
            httpGet:
              path: /health
              port: {{ "{{" }} .Values.healthPort {{ "}}" }}
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ "{{" }} .Values.healthPort {{ "}}" }}
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 10
          resources:
            {{ "{{" }}- toYaml .Values.resources | nindent 12 {{ "}}" }}
      {{ "{{" }}- with .Values.nodeSelector {{ "}}" }}
      nodeSelector:
        {{ "{{" }}- toYaml . | nindent 8 {{ "}}" }}
      {{ "{{" }}- end {{ "}}" }}
    {{ "{{" }}- with .Values.affinity {{ "}}" }}
      affinity:
        {{ "{{" }}- toYaml . | nindent 8 {{ "}}" }}
    {{ "{{" }}- end {{ "}}" }}
    {{ "{{" }}- with .Values.tolerations {{ "}}" }}
      tolerations:
        {{ "{{" }}- toYaml . | nindent 8 {{ "}}" }}
    {{ "{{" }}- end {{ "}}" }}
