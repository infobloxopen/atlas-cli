pipeline {
  agent {
    label 'ubuntu_docker_label'
  }
  tools {
    go "Go 1.19"
  }
  stages {
    stage("Lint") {
      steps {
        sh "make fmt && git diff --exit-code"
      }
    }
    {{ if .WithHelm }}
    stage("Helm lint") {
      steps {
        sh "make helm-lint"
      }
    }{{end}}
    stage("Test") {
      steps {
        sh "make test"
      }
    }
    stage("Build") {
      steps {
        withDockerRegistry([credentialsId: "<insert-the-creds-id>", url: ""]) {
          sh "make docker push"
        }
      }
    }
    stage("Push") {
      when {
        branch "main"
      }
      steps {
        withDockerRegistry([credentialsId: "<insert-the-creds-id>", url: ""]) {
          sh "make push IMAGE_VERSION=latest"
        }
      }
    }
    {{ if .WithHelm }}
    stage('Push charts') {
        steps {
          withDockerRegistry([credentialsId: "<insert-the-creds-id>", url: ""]) {
            withAWS(region:'<insert-the-region-id>', credentials:'<insert-the-creds-id>') {
                sh "IMAGE_VERSION=\$(IMAGE_VERSION)-j$BUILD_NUMBER make push-chart"
              }
          }
          archiveArtifacts artifacts: 'helm/$(CHART_NAME)-*.tgz'
          archiveArtifacts artifacts: 'helm.properties'
        }
    }{{end}}
  }
  post {
    success {
      finalizeBuild()
    }
    cleanup {
      sh "make clean || true"
      cleanWs()
    }
  }
}
