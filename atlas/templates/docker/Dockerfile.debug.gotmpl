# build the server binary
FROM golang:1.19-alpine3.17 AS builder
LABEL stage=server-intermediate

# install tools
RUN apk update && apk add curl git
RUN go get -ldflags "-s -w -extldflags '-static'" github.com/go-delve/delve/cmd/dlv

WORKDIR /go/src/{{ .Root }}/{{ .Name }}

COPY . .
RUN CGO_ENABLED=0 GOOS=linux go build -gcflags="all=-N -l" -o bin/server ./cmd/server

# copy the server binary from builder stage; run the server binary
FROM alpine:latest AS runner
WORKDIR /bin

COPY --from=builder /go/src/{{ .Root }}/{{ .Name }}/bin/server .
{{ if .WithGateway }}COPY pkg/pb/*.swagger.json www/swagger.json{{ end }}
{{ if .WithDatabase }}COPY --from=builder /go/src/{{ .Root }}/{{ .Name }}/db/migrations /db/migrations/{{end}}
COPY --from=builder /go/bin/dlv .

EXPOSE 8080
EXPOSE 8081
EXPOSE 9090
EXPOSE 12345

ENTRYPOINT [ "dlv", "exec", "./server", "--listen=:12345", "--headless=true", "--api-version=2", "--accept-multiclient", "--continue", "--" ]
